// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voting.DAL.Context;

#nullable disable

namespace Voting.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220411155826_rating-readonly")]
    partial class ratingreadonly
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Voting.DAL.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Voting.DAL.Entities.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShowTimes")
                        .HasColumnType("int");

                    b.Property<int>("VotesCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("Voting.DAL.Entities.Pair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FirstModelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVoted")
                        .HasColumnType("bit");

                    b.Property<int?>("SecondModelId")
                        .HasColumnType("int");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirstModelId");

                    b.HasIndex("SecondModelId");

                    b.ToTable("ModelsPair");
                });

            modelBuilder.Entity("Voting.DAL.Entities.Image", b =>
                {
                    b.HasOne("Voting.DAL.Entities.Model", null)
                        .WithMany("Images")
                        .HasForeignKey("ModelId");
                });

            modelBuilder.Entity("Voting.DAL.Entities.Pair", b =>
                {
                    b.HasOne("Voting.DAL.Entities.Model", "FirstModel")
                        .WithMany()
                        .HasForeignKey("FirstModelId");

                    b.HasOne("Voting.DAL.Entities.Model", "SecondModel")
                        .WithMany()
                        .HasForeignKey("SecondModelId");

                    b.Navigation("FirstModel");

                    b.Navigation("SecondModel");
                });

            modelBuilder.Entity("Voting.DAL.Entities.Model", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
